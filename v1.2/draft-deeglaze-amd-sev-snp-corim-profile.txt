



Remote ATtestation ProcedureS                                   D. Glaze
Internet-Draft                                                Google LLC
Intended status: Standards Track                            31 July 2024
Expires: 1 February 2025


            CoRIM profile for AMD SEV-SNP attestation report
            draft-deeglaze-amd-sev-snp-corim-profile-latest

Abstract

   AMD Secure Encrypted Virtualization with Secure Nested Pages (SEV-
   SNP) attestation reports comprise of reference values and
   cryptographic key material that a Verifier needs in order to appraise
   Attestation Evidence produced by an AMD SEV-SNP virtual machine.
   This document specifies the information elements for representing
   SEV-SNP Reference Values in CoRIM format.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 1 February 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  AMD SEV-SNP Attestation Reports
     3.1.  AMD SEV-SNP CoRIM Profile
       3.1.1.  AMD SEV-SNP Target Environment
       3.1.2.  AMD SEV-SNP Attestation Report measurement values
               extensions
         3.1.2.1.  Version scheme extension
         3.1.2.2.  Notional Instance Identity
       3.1.3.  AMD SEV-SNP Evidence Translation
         3.1.3.1.  environment-map
         3.1.3.2.  measurement-map
         3.1.3.3.  measurement-values-map
           3.1.3.3.1.  TCB comparison
         3.1.3.4.  Key digest comparison
     3.2.  AMD SEV-SNP Launch Event Log
     3.3.  AMD SEV-SNP Launch Event Log Appraisal
       3.3.1.  Comparisons for reference values
   4.  IANA Considerations
     4.1.  New CBOR Tags
   5.  References
     5.1.  Normative References
     5.2.  Informative References
   Contributors
   Author's Address

1.  Introduction

   TODO: write after content.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 RFC2119 [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   The reader is assumed to be familiar with the terms defined in
   [I-D.ietf-rats-corim] and Section 4 of [RFC9334].  The syntax of data
   descriptions is CDDL as specified in [RFC8610].

3.  AMD SEV-SNP Attestation Reports

   The AMD SEV-SNP attestation scheme in [SEV-SNP.API] contains
   measurements of security-relevant configuration of the host
   environment and the launch configuration of a SEV-SNP VM.  This draft
   documents the normative representation of attestation report Evidence
   as a CoRIM profile.

   AMD-SP: AMD Secure Processor.  A separate core that provides the
   confidentiality and integrity properties of AMD SEV-SNP.  The
   function that is relevant to this document is its construction of
   signed virtual machine attestation reports.

   VCEK: Versioned Chip Endorsement Key.  A key for signing the SEV-SNP
   Attestation Report.  The key is derived from a unique device secret
   as well as the security patch levels of relevant host components.

   VLEK: Version Loaded Endorsement Key.  An alternative SEV-SNP
   Attestation Report signing key that is derived from a secret shared
   between AMD and a Cloud Service Provider.  The key is encrypted with
   a per-device per-version wrapping key that is then decrypted and
   stored by the AMD-SP.

   VEK: Either a VCEK or VLEK.

3.1.  AMD SEV-SNP CoRIM Profile

   AMD SEV-SNP launch endorsements are carried in one or more CoMIDs
   inside a CoRIM.

   The profile attribute in the CoRIM MUST be present and MUST have a
   single entry set to the uri http://amd.com/please-permalink-me as
   shown in {#figure-profile}.

   {% figure caption:"SEV-SNP attestation profile version 1, CoRIM
   profile" %}

   / corim-map / {
     / corim.profile / 3: [
       32("http://amd.com/please-permalink-me")
     ]
     / ... /
   }

   {% endfigure %}

3.1.1.  AMD SEV-SNP Target Environment

   The ATTESTATION_REPORT structure as understood in the RATS
   Architecture [RFC9334] is a signed collection of Claims that
   constitute Evidence about the Target Environment.  The Attester for
   the ATTESTATION_REPORT is specialized hardware that will only run
   AMD-signed firmware.

   The class-id for the Target Environment measured by the AMD-SP is the
   tagged OID #6.111(1.3.6.1.4.1.3704.2.1).  The launched VM on SEV-SNP
   has an ephemeral identifier REPORT_ID.  If the VM is the continuation
   of some instance as carried by a migration agent, there is also a
   possible REPORT_ID_MA value to identify the instance.  The attester,
   however, is always on the same CHIP_ID.  Given that the CHIP_ID is
   not uniquely identifying for a VM instance, it is better classified
   as a group.  The CSP_ID is similarly better classified as a group.
   Either the CHIP_ID or the CSP_ID may be represented in the group
   codepoint as a tagged-bytes.  If the SIGNING_KEY bit of the
   attestation report is 1, then the group MUST be the CSP_ID of the
   VLEK.

   / environment-map / {
   / class-map / {
      / class-id: / 0 => #6.111(1.3.6.1.4.1.3704.2.1)
    }
   / instance: / 1 => #6.563({
     / report-id: / 0 => REPORT_ID,
     / report-id-ma: / 1 => REPORT_ID_MA
     })
   / group: / 2 => #6.560(CHIP_ID)
    }

3.1.2.  AMD SEV-SNP Attestation Report measurement values extensions

   The fields of an attestation report that have no direct analog in the
   base CoRIM CDDL are given negative codepoints to be specific to this
   profile.

   The GUEST_POLICY field's least significant 16 bits represent a
   Major.Minor minimum version number:

   sevsnpvm-policy-record = [
     abi-major: byte,
     abi-minor: byte
   ]

   The policy's minimum ABI version is assigned codepoint -1:

   $$measurement-values-map-extension //= (
     &(sevsnpvm-policy-abi: -1) => sevsnpvm-policy-record
   )

   The attestation report's FAMILY_ID and IMAGE_ID are indirectly
   represented through an extension to $version-scheme as described in
   Section 3.1.2.1.

   The attestation report's VMPL field is assigned codepoint -2:

   $$measurement-values-map-extension //= (
     &(sevsnpvm-vmpl: -2) => 0..3
   )

   The attestation report's HOST_DATA is assigned codepoint -3:

   $$measurement-values-map-extension //= (
     &(sevsnpvm-host-data: -3) => bstr .size 32
   )

   The SEV-SNP firmware build number and Minor.Minor version numbers are
   provided for both the installed and committed versions of the
   firmware to account for firmware hotloading.  The three values are
   captured in a record type sevsnphost-sp-fw-version-record:

   sevsnphost-sp-fw-version-record = [
     build-number: uint .size 1,
     major: uint .size 1,
     minor: uint .size 1
   ]

   The current build/major/minor of the SP firmware is assigned
   codepoint -4:

   $$measurement-values-map-extension //= (
     &(sevsnphost-sp-fw-current: -4) => sevsnphost-sp-fw-version-record
   )

   The committed build/major/minor of the SP firmware is assigned
   codepoint -5:

   $$measurement-values-map-extension //= (
     &(sevsnphost-sp-fw-committed: -5) => sevsnphost-sp-fw-version-record
   )

   The host components other than AMD SP firmware are relevant to VM
   security posture, so a combination of host components' security patch
   levels are included as TCB versions.  The TCB versions are expressed
   as a 64-bit number where each byte corresponds to a different
   component's security patch level.  Reference value providers MUST
   provide an overall minimum value for the combination of components,
   since lexicographic ordering is vulnerable to downgrade attacks.
   Tools for human readability MAY present the TCB version a component-
   wise manner, but that is outside the scope of this document.

   The CURRENT_TCB version of the host is assigned codepoint -6:

   $$measurement-values-map-extension //= (
     &(sevsnphost-current-tcb: -6) => svn-type-choice
   )

   The COMMITTED_TCB version of the host is assigned codepoint -7:

   $$measurement-values-map-extension //= (
     &(sevsnphost-committed-tcb: -7) => svn-type-choice
   )

   The LAUNCH_TCB version of the host is assigned codepoint -8:

   $$measurement-values-map-extension //= (
     &(sevsnphost-launch-tcb: -8) => svn-type-choice
   )

   The REPORTED_TCB version of the host is assigned codepoint -9:

   $$measurement-values-map-extension //= (
     &(sevsnphost-launch-tcb: -8) => svn-type-choice
   )

   The GUEST_POLICY boolean flags are added as extensions to $$flags-
   map-extension, starting from coedpoint -1.

   $$flags-map-extension //= &(
     sevsnpvm-policy-smt-allowed: -1,
     sevsnpvm-policy-migration-agent-allowed: -2,
     sevsnpvm-policy-debug-allowed: -3,
     sevsnpvm-policy-single-socket-only: -4,
     sevsnpvm-policy-cxl-allowed: -5,
     sevsnpvm-policy-mem-aes-256-xts-required: -6,
     sevsnpvm-policy-rapl-must-be-disabled: -7,
     sevsnpvm-policy-ciphertext-hiding-must-be-enabled: -8,
   )

   There are 47 available bits for selection when the mandatory 1 in
   position 17 and the ABI Major.Minor values are excluded from the
   64-bit GUEST_POLICY.  The PLATFORM_INFO bits are host configuration
   that are added as extensions to $$flags-map-extension starting at
   -49.

   $$flags-map-extension //= &(
     sevsnphost-smt-enabled: -49,
     sevsnphost-tsme-enabled: -50,
     sevsnphost-ecc-mem-reported-enabled:-51,
     sevsnphost-rapl-disabled: -52,
     sevsnphost-ciphertext-hiding-enabled: -53
   )

3.1.2.1.  Version scheme extension

   Extend the $version-scheme type with as follows

   $version-scheme /= &(sevsnpvm-familyimageid-hex: -1)

   The -1 scheme is a string representation of the two 128-bit
   identifiers in hexadecimal encoding as separated by /. The scheme
   allows for fuzzy comparison with _ as a wildcard on either side of
   the /.

   An endorsement provider MAY use a different version scheme for the
   &(version: 0) codepoint.

3.1.2.2.  Notional Instance Identity

   A CoRIM instance identifier is universally unique, but there are
   different notions of identity within a single attestation report that
   are each unique within their notion.  A notional instance identifier
   is a tagged CBOR map from integer codepoint to opaque bytes.

   int-bytes-map = { * int => bytes }

   Profiles may restrict which integers are valid codepoints, and may
   restrict the respective byte string sizes.  For this profile, only
   codepoints 0 and 1 are valid.  The expected byte string sizes are 32
   bytes.  For the int-bytes-map to be an interpretable extension of
   $instance-id-type-choice, there is tagged-int-bytes-map:

   tagged-int-bytes-map = #6.563(int-bytes-map)

3.1.3.  AMD SEV-SNP Evidence Translation

   The ATTESTATION_REPORT Evidence is converted into a CoRIM endorsed-
   triple-record using the rules in this section.  Fields of
   ATTESTATION_REPORT are referred to by their assigned names in
   [SEV-SNP.API].  If the ATTESTATION_REPORT contains ID_BLOCK
   information, the relevant fields will be represented in a second
   endorsed-triple-record with a different authorized-by field value, as
   per the merging rules of [I-D.ietf-rats-corim].

3.1.3.1.  environment-map

   *  The environment-map / class / class-id field SHALL be set to the
      BER [X.690] encoding of OID [RFC9090] 1.3.6.1.4.1.3704.2.1 and
      tagged with #6.111.

   *  The environment-map / instance field SHALL be set to an int-bytes-
      map tagged with #6.111 with at least one codepoint 0 or 1.  If
      codepoint 0 is populated, it SHALL be set to REPORT_ID.  If
      codepoint 1 is populated, it SHALL be set to REPORT_ID_MA.

   *  The environment-map / group field SHALL be set to the VLEK csp_id
      and tagged with #6.111 if SIGNING_KEY is 1.  If SIGNING_KEY is 0,
      the field MAY be set to the VCEK hwid and tagged with #6.111.

3.1.3.2.  measurement-map

   The mkey is left unset.  The authorized-by key SHALL be set to a
   representation of the VEK that signed the ATTESTATION_REPORT, or a
   key along the certificate path to a self-signed root, i.e., the ASK,
   ASVK, or ARK for the product line.  The measurement-values-map is set
   as described in the following section.

3.1.3.3.  measurement-values-map

   The function is-set(x, b) represents whether the bit at position b is
   set in the number x.

   *  The digests: 2 codepoint SHALL be set to either [ / digest / {
      alg: 7 val: MEASUREMENT } ] or [ / digest / { alg: "sha-384" val:
      MEASUREMENT } ] as assigned in [named-info].

   *  The &(flags: 3) / flags-map / sevsnpvm-policy-smt-allowed
      codepoint SHALL be set to is-set(GUEST_POLICY, 16.

   *  The &(flags: 3) / flags-map / sevsnpvm-policy-migration-agent-
      allowed codepoint SHALL be set to is-set(GUEST_POLICY, 18).

   *  The &(flags: 3) / flags-map / sevsnpvm-policy-debug-allowed
      codepoint SHALL be set to is-set(GUEST_POLICY, 19).

   *  The &(flags: 3) / flags-map / sevsnpvm-policy-single-socket-only
      codepoint SHALL be set to is-set(GUEST_POLICY, 20).

   *  The &(flags: 3) / flags-map / sevsnpvm-policy-cxl-allowed
      codepoint SHALL be set to is-set(GUEST_POLICY, 21).

   *  The &(flags: 3) / flags-map / sevsnpvm-policy-mem-aes-256-xts-
      required codepoint SHALL be set to is-set(GUEST_POLICY, 22).

   *  The &(flags: 3) / flags-map / sevsnpvm-policy-rapl-must-be-
      disabled codepoint SHALL be set to is-set(GUEST_POLICY, 23).

   *  The &(flags: 3) / flags-map / sevsnpvm-policy-ciphertext-hiding-
      must-be-enabled codepoint SHALL be set to is-set(GUEST_POLICY,
      24).

   *  The &(flags: 3) / flags-map / sevsnphost-smt-enabled codepoint
      SHALL be set to is-set(PLATFORM_INFO, 0).

   *  The &(flags: 3) / flags-map / sevsnphost-tsmu-enabled codepoint
      SHALL be set to is-set(PLATFORM_INFO, 1).

   *  The &(flags: 3) / flags-map / sevsnphost-ecc-mem-reported-enabled
      codepoint SHALL be set to is-set(PLATFORM_INFO, 2).

   *  The &(flags: 3) / flags-map / sevsnphost-rapl-disabled codepoint
      SHALL be set to is-set(PLATFORM_INFO, 3).

   *  The &(flags: 3) / flags-map / sevsnphost-ciphertext-hiding-enabled
      codepoint SHALL be set to is-set(PLATFORM_INFO, 4).

   *  The &(sevsnpvm-policy-abi: -1) codepoint SHALL be set to [
      ABI_MAJOR, ABI_MINOR ].

   *  The &(sevsnpvm-vmpl: -2) codepoint SHALL be set to VMPL.

   *  The &(sevsnpvm-hostdata: -3) codepoint SHALL be set to HOSTDATA if
      nonzero.  It MAY be set to HOSTDATA if all zeroes.

   *  The &(sevsnphost-sp-fw-current: -4) codepoint SHALL be set to [
      CURRENT_BUILD, CURRENT_MAJOR, CURRENT_MINOR ].

   *  The &(sevsnphost-sp-fw-committed: -5) codepoint SHALL be set to [
      COMMITTED_BUILD, COMMITTED_MAJOR, COMMITTED_MINOR ].

   *  The &(sevsnphost-current-tcb: -6) codepoint SHALL be set to
      552(CURRENT_TCB).

   *  The &(sevsnphost-committed-tcb: -7) codepoint SHALL be set to
      552(COMMITTED_TCB)

   *  The &(sevsnphost-launch-tcb: -8) codepoint SHALL be set to
      552(LAUNCH_TCB).

   *  The &(sevsnphost-reported-tcb: -9) codepoint SHALL be set to
      552(REPORTED_TCB).

   If ID_BLOCK information is available, it appears in its own
   endorement-triple-record with additional values in authorized-by
   beyond the attestation key.  The authorized-by field is extended with
   32780(ID_KEY_DIGEST), and if AUTHOR_KEY_EN is 1, then it is also
   extended with 32780(AUTHOR_KEY_DIGEST).  The Verifier MAY use a base
   CDDL CoRIM $crypto-key-type-choice representation if its public key
   information's digest is equal to the #6.32780-tagged bytes, as
   described it Section 3.1.3.4.

   *  The version: 0 codepoint SHALL be set to ~~~cbor-diag / version-
      map / { / version: / 0 => hexlify(FAMILY_ID) '/' hexlify(IMAGE_ID)
      / version-scheme: -1 / => &(sevsnpvm-familyimageid-hex: -1) } ~~~
      where hexlify is a function that translates the a byte string to
      its hexadecimal string encoding.

   *  The &(svn: 1) codepoint SHALL be set to 552(GUEST_SVN).

   *  The &(digests: 2) codepoint is in the triple record.

   *  The &(flags: 3) / flags-map codepoints prefixed by sevsnpvm-policy
      SHALL be set in the triple's &(flags: 3) entry as per above
      translation rules.

3.1.3.3.1.  TCB comparison

   The Verifier SHALL use tho svn-type-choice comparison algorithm from
   {-rats-corim}}.

3.1.3.4.  Key digest comparison

   When ID_BLOCK is used, the full key information needed for signature
   verification is provided by the VMM at launch in an ID_AUTH
   structure.  The SNP firmware verifies the signatures and adds digests
   of the signing key(s) to the attestation report as evidence of
   successful signature verification.  When a Verifier does not have
   access to the original public key information used in ID_AUTH, the
   attestation report key digests can still be used as a representation
   of authority.

   The APPENDIX: Digital Signatures section of [SEV-SNP.API] specifies a
   representation of public keys and signatures.  An attestation report
   key digest will be a SHA-384 digest of the 0x403 byte buffer
   representation of a public key.  If an author key is used, its
   signature of the ID_KEY is assumed to exist and have passed given the
   SNP firmware specification.

   If a $crypto-key-type-choice key representation specifies an
   algorithm and parameters that are included in the Digital Signatures
   appendix, it is comparable to a #6.32780-tagged byte string.

   *  Two #6.32780-tagged byte strings match if and only if their
      encodings are bitwise equal.

   *  A thumbprint representation of a key is not comparable to a
      #6.32780-tagged byte string since the parameters are not
      extractable.

   *  A PKIX public key (#6.554-tagged tstr) or PKIX certificate
      (#6.555-tagged tstr) MAY be comparable to a #6.32780-tagged byte
      string.

   The [RFC3280] specified AlgorithmIdentifier has optional parameters
   based on the algorithm identifier.  The AMD signature algorithm 1h
   corresponds to algorithm ecdsa-with-sha384 from section 3.2 of
   [RFC5758], but the parameters MUST be omitted.  The
   SubjectPublicKeyInfo is therefore id-ecPublicKey from section 2.1.1
   of [RFC5480] to further allow the curve to be specified, despite not
   further specifying that the signature is of a SHA-384 digest.  The
   AMD ECSDA curve name 2h corresponds to named curve secp384r1 from
   section 2.2 of [RFC5480].  The ECPoint conversion routines in section
   2 of [SEC1] provide guidance on how the QX and QY little-endian big
   integers zero-padded to 72 bytes may be constructed.

3.2.  AMD SEV-SNP Launch Event Log

   The composition of a SEV-SNP VM may be comprised of measurements from
   multiple principals, such that no one principal has absolute
   authority to endorse the overall measurement value represented in the
   attestation report.  If one principal does have that authority, the
   ID_BLOCK mechanism provides a convenient launch configuration
   endorsement mechanism without need for distributing a CoRIM.  This
   section documents an event log format the Virtual Machine Monitor may
   construct at launch time and provide in the data pages of an extended
   guest request, as documented in [GHCB].

   The content media type shall be application/vnd.amd.sevsnp.launch-
   updates+cbor for the encoding of a sevsnp-launch-configuration-map:

   sevsnp-launch-configuration-map = {
     ? (fms: 0) => uint
     ? (sevsnpvm-launch-baseline: 1) => bytes .size 48
     ? (sevsnpvm-launch-updates: 2) => [ + sevsnp-launch-update-data-map ]
   }

   *  The fms field if included SHALL contain the CPUID[1]_EAX value
      masked with 0x0fff3fff to provide chip family, model, stepping
      information.  If not included, the Verifier may reference the VEK
      certificate's extension for productName.

   *  The sevsnpvm-launch-baseline field if not included is SHALL be
      interpreted as an all zero SHA-384 digest.  The calculation of the
      launch measurement SHALL use the value is the initial PAGE_INFO's
      DIGEST_CUR value.

   *  The sevsnpvm-launch-updates field contains an ordered list of
      inputs to the SNP_LAUNCH_UPDATE command:

   sevsnp-launch-update-sequence-map =
     { * sevsnp-launch-update-sequence-number => sevsnp-launch-update-data-map }

   The sevsnp-launch-update-data-map contains all fields of the
   PAGE_INFO structure that are needed for reconstructing a measurement.
   If an update repeats many times, such as an application processor
   VMSA, then that can be compressed with the repeat field.

   The bits 1..3 encode the PAGE_TYPE as documented in the
   [SEV-SNP.API].  The content codepoint MUST NOT be present if the page
   type is neither PAGE_TYPE_NORMAL (01h) nor PAGE_TYPE_VMSA (02h).

   If page2m is not set, and content is present, it must not exceed size
   0x1000B.  If page2m is set and content is present, it must not exceed
   size 0x100000B.  The content is appended with zeros to reach the
   expected size.

   For the VMM, there are some updates it does on behalf of a different
   principal than the firmware vendor, so it may choose to pass through
   some of the information about the launch measurement circumstances
   for separate appraisal.

   The encoded sevsnp-launch-configuration-map may be found in the
   extended guest report data table for UUID 8dd67209-971c-4c7f-
   8be6-4efcb7e24027.

   The VMM is expected to provide all fields unless their default
   corresponds to the value used.

3.3.  AMD SEV-SNP Launch Event Log Appraisal

   The sevsnp-launch-configuration-map is translated into a full
   sequence of SNP_LAUNCH_UPDATE commands on top of a baseline digest
   value to calculate following [SEV-SNP.API]'s documentation of digest
   calculation from PAGE_INFO structures.

   The first PAGE_INFO structure uses the baseline digest as its
   DIGEST_CUR.  The following pseudocode for the function measurement
   computes the expected measurement of the endorsement format.  If this
   measurement equals the digests value with VCEK authority, then add
   the baseline and updates measurement values to the same ECT as the
   attestation report.

   Since the VMM only has to provide the page type and digest of the
   contents, the rest of the fields of a sevsnp-launch-update-data-map
   have default values when translated to a PAGE_INFO without the
   DIGEST_CUR field.  If the baseline is not provided, it is assumed to
   be all zeros.

   ``` measurement({fms, baseline, updates}) = iterate(baseline,
   appendmap(mk_page_info(fms), updates))

   PAGE_SHIFT = 12 bitWidth(fms) = 48 if (fms >> 4) == 0xA00F0 ; Milan
   bitWidth(fms) = 52 if (fms >> 4) == 0xA10F0 ; Genoa

   top_gpfn(fms) = ((1 << bitWidth(fms)) - 1) >> PAGE_SHIFT
   default_gpa(fms): uint64 = top_gpfn(fms) << PAGE_SHIFT

   mk_page_info(fms)({page-type or PAGE_TYPE_NORMAL, content, gpa or
   default_gpa(fms), page-data or 0, vmpl-perms or 0, repeat or
   1}):list[bytes] = [contents || {0x70, 0, page-type, page-data} ||
   leuint64(vmpl-data) || leuint64(gpa)]*repeat

   appendmap(f, []) = [] appendmap(f, x:xs) = append(f(x), appendmap(f,
   xs))

   iterate(digest_cur, []) = digest_cur iterate(digest_cur, info:infos)
   = iterate(sha384(digest_cur || info), infos) ```

   The leuint64 metafunction translates a 64-bit unsigned integer into
   its little endian byte string representation.

3.3.1.  Comparisons for reference values

   An "any" sequence number matches any sequence number.  The uint
   sequence number must be equal to the sequence number in the ACS.  The
   sevsnp-launch-update-data-map reference value must match all present
   codepoints with encoding equality.  The evidence ECT for the matching
   values are then split into a separate ECT to account for the added
   authority.

4.  IANA Considerations

4.1.  New CBOR Tags

   IANA is requested to allocate the following tags in the "CBOR Tags"
   registry [IANA.cbor-tags].  The choice of the CoRIM-earmarked value
   is intentional.

     +=======+=======+===================================+===========+
     | Tag   | Data  | Semantics                         | Reference |
     |       | Item  |                                   |           |
     +=======+=======+===================================+===========+
     | 563   | map   | Keys are always int, values are   | RFCthis   |
     |       |       | opaque bytes, see Section 3.1.2.2 |           |
     +-------+-------+-----------------------------------+-----------+
     | 32780 | bytes | A digest of an AMD public key     | RFCthis   |
     |       |       | format that compares with other   |           |
     |       |       | keys Section 3.1.3.4              |           |
     +-------+-------+-----------------------------------+-----------+

                                  Table 1

5.  References

5.1.  Normative References

   [IANA.cbor-tags]
              IANA, "Concise Binary Object Representation (CBOR) Tags",
              <https://www.iana.org/assignments/cbor-tags>.

   [IANA.named-information]
              IANA, "Named Information",
              <https://www.iana.org/assignments/named-information>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC8610]  Birkholz, H., Vigano, C., and C. Bormann, "Concise Data
              Definition Language (CDDL): A Notational Convention to
              Express Concise Binary Object Representation (CBOR) and
              JSON Data Structures", RFC 8610, DOI 10.17487/RFC8610,
              June 2019, <https://www.rfc-editor.org/rfc/rfc8610>.

   [RFC9090]  Bormann, C., "Concise Binary Object Representation (CBOR)
              Tags for Object Identifiers", RFC 9090,
              DOI 10.17487/RFC9090, July 2021,
              <https://www.rfc-editor.org/rfc/rfc9090>.

   [RFC9334]  Birkholz, H., Thaler, D., Richardson, M., Smith, N., and
              W. Pan, "Remote ATtestation procedureS (RATS)
              Architecture", RFC 9334, DOI 10.17487/RFC9334, January
              2023, <https://www.rfc-editor.org/rfc/rfc9334>.

   [X.690]    International Telecommunications Union, "Information
              technology — ASN.1 encoding rules: Specification of Basic
              Encoding Rules (BER), Canonical Encoding Rules (CER) and
              Distinguished Encoding Rules (DER)", ITU-T Recommendation
              X.690, August 2015, <https://www.itu.int/rec/T-REC-X.690>.

5.2.  Informative References

   [GHCB]     Advanced Micro Devices Inc., "SEV-ES Guest-Hypervisor
              Communication Block Standardization", Revision 2.03 , July
              2023, <https://www.amd.com/content/dam/amd/en/documents/
              epyc-technical-docs/specifications/56421.pdf>.

   [I-D.ietf-rats-corim]
              Birkholz, H., Fossati, T., Deshpande, Y., Smith, N., and
              W. Pan, "Concise Reference Integrity Manifest", Work in
              Progress, Internet-Draft, draft-ietf-rats-corim-05, 8 July
              2024, <https://datatracker.ietf.org/doc/html/draft-ietf-
              rats-corim-05>.

   [SEC1]     Certicom Corp., "Standards for Efficient Cryptography
              Group (SECG), "SEC1: Elliptic Curve Cryptography"",
              Version 1.0 , September 2000,
              <https://www.secg.org/SEC1-Ver-1.0.pdf>.

   [SEV-SNP.API]
              Advanced Micro Devices Inc., "SEV Secure Nested Paging
              Firmware ABI Specification", Revision 1.55 , September
              2023, <https://www.amd.com/content/dam/amd/en/documents/
              epyc-technical-docs/specifications/56860.pdf>.

   [VCEK]     Advanced Micro Devices Inc., "Versioned Chip Endorsement
              Key (VCEK) Certificate and KDS Interface Specification",
              Revision 0.51 , January 2023,
              <https://www.amd.com/content/dam/amd/en/documents/epyc-
              technical-docs/specifications/57230.pdf>.

   [VLEK]     Advanced Micro Devices Inc., "Versioned Loaded Endorsement
              Key (VLEK) Certificate Definition", Revision 0.10 ,
              October 2023,
              <https://www.amd.com/content/dam/amd/en/documents/epyc-
              technical-docs/user-guides/58369-010-versioned-loaded-
              endorsement-key-certificate-definition.pdf>.

Contributors

   Yogesh Deshpande
   arm
   Email: yogesh.deshpande@arm.com


   Yogesh Deshpande contributed to the data model by providing advice
   about CoRIM founding principles.

Author's Address

   Dionna Glaze
   Google LLC
   Email: dionnaglaze@google.com
